Hey guys

So here are a couple of notes that I have made from the meeting today.

1. Please read the README document provided by Thinus. Although not everything
in there is relevent to us, we should be aware of what's going on with the
other teams. So please read through it; it's important.

2. Secondly, with regard to GitHub, we have to utilise the bugtracker and wiki
so that the integrators know what's going on with each module. Also, be aware
we should also make use of branching, so if you're not too familiar with it, 
please look up tutorials on YouTube or read chapter 3 of a book called Pro Git, 
which explains it in detail. How we decide to branch is up to us, as long as
we release milestone releases so that we can test using those.

3. Please also remember to document everything. Comment a lot.
If you're using WebStorm, then the IDE should auto-generate JSDoc comments
for us. But we will need to do this documentation.

4. Please follow the coding standards mentioned in the README file.

5. With regard to frameworks, if we can find stuff online to help us with our
module, we are free to use it as long as it's free and open source. There are 
also examples online on uploading files on NodeJS. We can set up a simple
server to test our functions.

6. Keep the code as simple as possible. Also, the module has to run on its
own.

7. The top-level team wants the module done as soon as possible and they want
us to try and get it done by Sunday. Remember, we are only implementing
core functionality, not the entire module, so we don't worry too much now.
I think let's just focus on getting the files uploaded, stored and generate
a URL.

8. Lastly, we need to create a database schema for the top level guys to
have an idea what to expect with the database. We will need to come up with
ideas.

As an aside, our module can be made into a object, so simply

var Resources = {};
Resources.uploadResurces = function(...){...

And then for testing we can use the index.html I provides and a simple server.

So let's just and make it as simple as we can.
